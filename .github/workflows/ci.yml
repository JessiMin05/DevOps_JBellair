name: Java CI with Maven

on:
 workflow_dispatch:
    inputs:
      version:
        description: 'Semantic Versioning: Docker'
        required: true
        default: '0.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout codebase
      - uses: actions/checkout@v4

    # Setup Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
    # Building with Maven
      - name: Build with Maven
        working-directory: .
        run: mvn -B package

    # Lint Code Base
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_JAVA: true
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Testing via JaCoCo/Surefire
      - name: Junit Test Dashboard
        uses: janisz/action@v2
        with:
          paths: target/surefire-reports/*.xml
          output: test-results.md
          show: all

    # SonarQube  
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=DevOps_JBellair -Dsonar.projectName='DevOps_JBellair'

    # Docker
      - name: Build & Push Docker image
        run: |
          echo "Using Docker tag: ${{ github.event.inputs.version }}"
          mvn io.fabric8:docker-maven-plugin:0.41.0:build \
              io.fabric8:docker-maven-plugin:0.41.0:push \
              -Ddocker.username=${{ secrets.DOCKER_USER }} \
              -Ddocker.password=${{ secrets.DOCKER_PASSWORD }} \
              -Ddocker.image.tag=${{ github.event.inputs.version }} \
              -DskipTests
